name: PR Checks

on:
  pull_request:
    branches: ['*']
  push:
    branches:
      - master
      - develop

jobs:
  setup:
    name: 🔧 Setup and Cache Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📤 Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📥 Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}

  lint:
    name: 🧹 Lint Code
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - run: npm run lint || true
      - run: echo "### Lint completed" >> $GITHUB_STEP_SUMMARY

      - name: 🪵 Upload lint logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-log
          path: lint.log

  svelte-check:
    name: ✅ Svelte Check
    needs: setup
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - run: npm run check || true
      - run: echo "### Svelte Check completed" >> $GITHUB_STEP_SUMMARY

  test-unit:
    name: 🧪 Unit Tests (Node ${{ matrix.node }})
    needs: [lint, svelte-check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Build project
        run: npm run build

      - run: npm run test:unit -- --coverage || true

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-${{ matrix.node }}
          path: coverage

      - run: echo "### Unit Tests (Node ${{ matrix.node }}) completed" >> $GITHUB_STEP_SUMMARY

  test-e2e:
    name: 🧪 E2E Tests (Playwright ${{ matrix.browser }})
    needs: [lint, svelte-check, test-unit]
    if: ${{ always() && needs.lint.result == 'success' && needs.svelte-check.result == 'success' && needs.test-unit.result == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run Playwright
        run: |
          npx playwright install --with-deps
          npx playwright test --project=${{ matrix.browser }} --reporter=html || true

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/

      - run: echo "### E2E Tests (${matrix.browser}) completed" >> $GITHUB_STEP_SUMMARY

  post-summary:
    name: 💬 PR Summary
    needs: [lint, svelte-check, test-unit, test-e2e]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 📊 Generate Job Summary
        run: |
          echo "### ✅ PR Check Summary" > summary.txt
          echo "#### 🧹 Lint: \`${{ needs.lint.result }}\`" >> summary.txt
          echo "#### ✅ Svelte Check: \`${{ needs.svelte-check.result }}\`" >> summary.txt
          echo "#### 🧪 Unit Tests: \`${{ needs.test-unit.result }}\`" >> summary.txt
          echo "#### 🧪 E2E Tests: \`${{ needs.test-e2e.result }}\`" >> summary.txt
          echo "" >> summary.txt
          if [[ "${{ needs.test-e2e.result }}" == "failure" ]]; then
            echo "[📥 Download Playwright report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> summary.txt
          fi

      - name: 💬 Post Summary Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: summary.txt
          header: pr-check-summary
